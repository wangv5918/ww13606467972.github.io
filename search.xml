<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[mylove]]></title>
    <url>%2F2020%2F05%2F09%2Fmylove%2F</url>
    <content type="text"><![CDATA[恋爱日记——记录与你的生活浮世万千，吾爱有三，日月卿。日为朝，月为暮，卿为朝朝暮暮 I love three things in the world,sun ,moon ,and you sun for morning ,moon for night ,and you forever]]></content>
      <categories>
        <category>LOVE</category>
      </categories>
      <tags>
        <tag>-LOVE</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[前端开发工程师养成手册]]></title>
    <url>%2F2019%2F08%2F26%2Fweb%E5%AD%A6%E4%B9%A0%2F</url>
    <content type="text"><![CDATA[前端开发工程师养成手册 [TOC] 前端开发工程师养成手册一.HTML基础2020.1.28-2020.2.131.基本标签2.表格标签作用：常见显示、展示表格数据，让数据显示的更加规整，可读性非常好。多用于后台数据 1&lt;table&gt;表格 &lt;tr&gt;行标签 &lt;td&gt;列标签 width 表格宽度，height表格高度，border表格的边框，bordercolor表格边框的颜色， cellspacing 单元格与单元格的间距，cellpading 单元格与内容之间的间距 1.表头单元格 th表头单元格：第一行；第一列。文本居中并加粗 2.表格标题caption 3.合并表格==三步走：区分行合并还是列合并；上下左右找到目标单元格；删除多余的单元格。== 4.表格拓展表格划分：题头thead、正文tbody、脚注tfoot。 3.表单标签3.1 input控件3.1.1 type属性 3.1.2 checked属性表示默认选中状态，常见于单选按钮和复选框 3.1.3 input属性小结 3.2 label标签（理解）label用于提升用户体验 ==label使用：== 1.label直接包含表单（不推荐） ==2.通过for和id来控制== 12&lt;label for="nc"&gt;昵称&lt;/label&gt; &lt;input type="text" value="输入文本" id="nc"&gt; 3.3 textarea 控件（文本域）常用于评论。轻松创建多行输入框 语法： 123&lt;textarea cols="每行中的字符数" rows="显示的行数"&gt; 文本内容&lt;/textarea&gt; 3.4 select 下拉列表语法： 123456&lt;select&gt; &lt;option&gt;选项1&lt;/option&gt; &lt;option&gt;选项2&lt;/option&gt; &lt;option&gt;选项3&lt;/option&gt; ....&lt;/select&gt; 注意事项： 1.select中至少包含一对option ==2.当option 中 selected=“selected” 时，当前选项为默认选中项。== 3.不常用，div常用做为下拉列表 ==3.5表单域== 5.图像img标签12&lt;img src="图像URL"&gt;&lt;/img&gt;title提示文本，alt图像不能显示时，显示的文本 6.链接 7.注释标签123&lt;!--这是一个HTML注释--&gt; 快捷键 Ctrl+//*这是一个css注释*/ 8.路径1.根目录2.相对路径以引用文件之网页所在位置为参考，而建立出的目录路径，因此，当保存于不同目录的网页引用同一文件时，所使用的路径将不相同。 路径分类 符号 说明 同一级路径 无 只需要输入文件名称 下一级路径 “ / ” 图像位于同级文件夹下 上一级路径 “ ../ ” 3.绝对路径9.锚点定位 10.列表标签 1注意**：&lt;ul&gt;&lt;/ul&gt;中只能嵌套&lt;li&gt;&lt;/li&gt;,在&lt;ul&gt;&lt;/ul&gt;标签中输入其他标签或文字是不允许的 1.有序列表ol2.无序列表ul3.自定义列表1234&lt;dl&gt; &lt;dt&gt;名词&lt;/dt&gt; &lt;dd&gt;名词解释&lt;/dd&gt;&lt;/dl&gt; 举个栗子，小米官网下部 4.总结 标签名 定义 说明 无序列表 里面只能包含li,没有顺序，最常用的列表 有序列表 里面只能包含li,有顺序 自定义列表 里面有两个姐弟，dt和dd 拓展阅读1.base标签 2.pre预格式化文本标签pre 写好的文字格式，怎么写怎么显示，少用 3.特殊字符空格&amp;nbsp 4.XHTML 5.web标准构成主要包括结构，表现，行为三个方面。结构用于对网页元素进行整理和分类（HTML），表现用于设置网页元素的版式，主要指css。行为指的是网页模型的定义以及交互的编写，主要是js 6.圆角边框语法 12345&lt;style&gt; ..... border-radius:ength; .....&lt;/style&gt; ●其中每一个值可以为数值或百分比的形式。●技巧:让一个正方形变成圆圈border-radius:50% 7.盒子阴影 语法： box-shadow:水平阴影 垂直阴影 模糊距离(虚实) 阴影尺寸(影子大小) 阴影颜色 内/外阴影； 8.圆角矩形设置4个角圆角矩形可以为4个角分别设置圆度， 但是是有顺序的 1234border-top-left-radius:20px;border-top-right-radius:20px;border-bottom-right-radius:20px;border-bottom-left-radius:20px; 如果4个角，数值相同 1border-radius: 15px; 里面数值不同，我们也可以按照简写的形式，具体格式如下: 1border-radius: 左上角 右上角 右下角 左下角; 还是遵循的顺时针。 9. margin 负值之美1). 负边距+定位：水平垂直居中咱们前面讲过， 一个绝对定位的盒子， 利用 父级盒子的 50%， 然后 往左(上) 走 自己宽度的一半 ，可以实现盒子水平垂直居中。 2). 压住盒子相邻边框10 CSS三角形之美12345678910111213141516div &#123; width: 0; height: 0; line-height:0； font-size: 0;border-top: 10px solid red;border-right: 10px solid green;border-bottom: 10px solid blue;border-left: 10px solid #000; &#125; 一张图， 你就知道 css 三角是怎么来的了, 做法如下： 我们用css 边框可以模拟三角效果 宽度高度为0 我们4个边框都要写， 只保留需要的边框颜色，其余的不能省略，都改为 transparent 透明就好了 为了照顾兼容性 低版本的浏览器，加上 font-size: 0; line-height: 0; 11. 过渡 transition语法格式 1transition ： 要过渡的属性 花费时间 运动曲线 何时开始 ●属性属性就是你想要变化的css属性，宽度高度 背景颜色内外边距都可以。如果想要所有的属性都变化过渡，写一个all就可以。●花费时间transition-duration花费时间单位是秒(必须写单位) s ms比如0.5s 这个s单位必须写ms毫秒●运动曲线 默认是ease 何时开始 默认是0s 鼠标触发就开始，可以设置延迟触发时间 12. 知识点 -获得焦点元素:focus 伪类 选择器用于选取获得焦点的元素 。 我们这里主要针对的是 表单元素 :hover 语法： 1234567891011.total input &#123; border: 1px solid #ccc; height: 30px; width: 40px; transition: all .5s;&#125;/*这个input 获得了焦点*/.total input:focus &#123; width: 80px; border: 1px solid skyblue;&#125; border: 1px solid #ccc; height: 30px; width: 40px; transition: all .5s;}/这个input 获得了焦点/.total input:focus { width: 80px; border: 1px solid skyblue;} 二.CSS 进阶之路 2020-2.13-2020.2.212.1 css三种引入方式2.1.1 css内部样式表（内嵌样式表）12&lt;style type="text/css"&gt;&lt;/style&gt; 2.1.2 行内式(内联样式) 2.1.3 ==外部样式表（外链式）==123&lt;head&gt; &lt;link rel="stylesheet" type="text/css" href="目标文件的路径及名称"&gt;&lt;/head&gt; 可以实现css共享 2.1.4 优先级比较范围大的优先级小，反而，范围小的优先级高 2.1.5 三种样式表总结 样式表 优点 使用情况 控制范围 行内样式 书写方便，权重高 较少 控制一个标签（少） 内部样式 部分结构和样式分离 较多 控制一个页面（中） 外部样式 完全实现结构和样式的分离 最多，推荐 控制整个站点（多） ==团队约定-代码风格==1.展开，竖写 2.推荐小写，不推荐大写 2.2CSS 基础选择器选择器来选择标签，把要实现的标签选择出来 2.2.1 标签选择器概念：指用HTML标签名称作为选择器，按标签名称分类，为页面中某一类标签指定统一的css样式 语法 12345标签名&#123; 属性一：属性一值； 属性二：属性二值； .....&#125; 作用：标签选择器，可以把某一类标签全部选择出来，比如所有的div标签和所有的span标签 优点：快速为页面中同一类型的标签统一样式。 缺点：不能设计差异化标签 2.2.2 id选择器id选择器用#开头，后面id名 12345678#id名&#123; 属性一：属性值一； 属性二：属性值二； .....&#125;&lt;p id="id名"&gt; &lt;/p&gt; 2.2.3 ==class类选择器==语法： 12345678.类名&#123; 属性一：属性一的值； 属性二：属性二的值； .....&#125;&lt;p class="类名"&gt; &lt;/p&gt; 优点：可以为元素对象定义单独或相同的样式，可以选择一个或多个标签。 多类名 123&lt;P class="类1 类2"&gt; &lt;/P&gt; 2.2.4 通配符选择器概念： 通配符选择器用==*==号来表示，就是选择所有的标签， 他是所有选择器选择范围最大的，，能匹配页面中所有的元素。 语法： 12345*&#123; 属性一:属性一的值； 属性二：属性二的值； ....&#125; 2.2.5 选择器总结 2.2.6 命名规则头: header内容: content/container尾: footer导航: nav .侧栏: sidebar栏目: column页面外围控制整体布局宽度: wrapper左右中: left right center登录条: loginbar标志: logo广告: banner页面主体: main热点: hot .新闻: news下载: download子导航: subnav菜单: menu .子菜单: submenu搜索: search 页脚: footer版权: copyright滚动: scroll内容: content标签页: tab文章列表: list提示信息: msg小技巧: tips栏目标题: title 2.3 css字体2.3.1 font-size字体大小font-size 可以设置字号 单位：可以使用相对长度单位，也可以使用绝对长度单位。推荐px，默认是16px，实际开发中先给body设置16px 2.3.2 font-family字体作用：font-family属性用于设置哪一种字体 ==注意== Unicode字体 2.3.3 font-weight 字体粗细 属性值 描述 normal 默认值（不加粗） bold 定义粗体（加粗的） 100-900 400等于normal。700等于bold。 2.3.4 font-style 字体风格 2.3.5 font综合写法语法 123选择器&#123; font：font-style font-weight font-size/line-height font-family；&#125; ==注意==：1.必须按照顺序书写，不能更换顺序。各个属性用空格隔开。 ​ 2.其中不需要设置的可以省略（取默认值），但必须保留font-size，font-family，否则font属性将不起作用 2.4 css外观属性2.4.1 color文本颜色 开发中常用十六进制 2.4.2 line-height 行间距作用：line-height属性用于设置行间距，行与行之间的距离，一般称为行高，常用px 技巧：一般情况下。，行距比字号大7,8像素 2.4.3 text-align：文本水平对齐方式作用：text-align 用于设置文本内容的水平对齐方式，相当于HTML中的align ==注意：是让盒子内容水平居中，不是让盒子居中对齐== 2.4.4 text-indent首行缩进作用：可以用于首行设置首行文本的缩进 属性值：使用em作为设置单位 1em就是一个字的宽度，如果是汉字的段落，1em就是一个汉字的宽度 2.4.5 text-decoration文本装饰（对象是链接） 2.5 CSS 复合选择器目的是更准确更精细的选择目标元素标签，复合选择器是由两个或多个基础选择器，通过不同方式组合而成的 2.5.1后代（包含）选择器 作用：用于选择元素或元素组的子孙 写法：把外层标签写在前面，内层标签写在后面，中间用==空格==间隔，先写老再写小 2.5.2 子元素选择器作用：只能选择作为某元素子元素(==亲儿子==)的元素 写法：父级标签在前，子级标签在后。中间加&gt;连接 2.5.3 并集选择器应用：某些选择器定义相同的样式，简洁代码，各个选择器通过，连接，通常用于集体声明。 2.5.4 链接伪类选择器作用： 用于向某些选择器添加特殊效果 ==记忆顺序LVHA== 2.5.5 交集选择器条件：有两个选择器构成，满足标签一、标签二的特点。 举个栗子： 12345678910&lt;style&gt; p.red&#123; color:red; &#125;&lt;/style&gt;&lt;body&gt; &lt;p class="red"&gt;红色&lt;/p&gt; &lt;p class="red"&gt;红色&lt;/p&gt; &lt;p&gt;蓝色&lt;/p&gt;&lt;/body&gt; 2.5.6 复合选择器总结 2.6标签显示模式标签显示模式：标签已什么方式进行显示，比如div自占一行，span一行可以多个，分为块元素和行元素。 2.6.1 块级元素div典型的块元素 块级元素的特点： 1.独占一行显示 2.可以控制高度、宽度、外边距、内边距的大小 3.宽度默认是父级容器的100% 4.是一个容器或盒子，里面可以放行内或块级元素 注意：只有文字才能组成段落，因此p标签不能放块级元素 ​ 还有h1、h2等都是文字类标签，不能放块级元素 2.6.2 行内元素span典型的行内标签 ●行内元素的特点:(1)]相邻行内元素在一 行上, 一行可以显示多个。(2) 高、宽直接设置是无效的。(3) 默认宽度就是它本身内容的宽度。(4) 行内元素只能容纳文本或则其他行内元素。 2.6.3 行内块元素img，nput，td 行内块元素的特点:(1)和相邻行内元素(行内块)在一行上,但是之间会有空白缝隙。一行可以显示多个(2)默认宽度就是它本身内容的宽度。(3)高度，行高、外边距以及内边距都可以控制。 2.6.4 ==标签显示模式转换==●块转行内: display:inline;●行内转块: display:block;●块、行内元素转换为行内块: display: inline-block; 2.7 行高那些事line-height行高和高度的三种关系●==如果行高等高度文字会垂直居中==●如果行高 大于高度 文字会偏下●如果行高 小于高度 文字会偏上 ==文字的行高等于盒子的高度== 2.8 css背景2.8.1 背景颜色 background-color12background-color：颜色值；默认的值是transparent 透明 2.8.2 背景图片 background-image123background-image ：none|url(url)none 默认无背景图片；建议URL不加引号 2.8.3 背景平铺 background-repeat1background-repeat：repeat； 默认是平铺 repeat : 背景图像在纵向和横向上平铺no-repeat: 背景图像不平铺repeat X : 背景图像在横向上平铺repeat- y : 背景图像在纵向平铺 2.8.4 背景位置 background-position ●注意:。必须先指定background-image属性。position 后面是x坐标和y坐标。可以使用方位名词或者精确单位。。如果只指定了一个方位名词，另一个值默认居中,为50%。。如果只指定一个数值那该数值用于x坐标，另一个默认是y坐标，默认居中。如果指定两个值，两个值都是方位名字，则两个值前后顺序无关，比如left top和top left效果一 致。如果指定两个值，精确单位和方位名字混合使用,则第一个值是x坐标， 第二个值是y坐标 2.8.5 背景附着 background-attachment背景附着就是解释背景是滚动的还是固定的 2.8.6 背景简写background:背景颜色 背景图片 地址 背景平铺 背景滚动 背景位置; 2.8.7背景透明1background： rgba(0,0,0,0.3); ● 最后一个参数是alpha透明度取值范围0~1之间● 我们习惯把0.3的0省略掉这样写background: rgba(0, 0, 0, .3);●注意:背景半透明是指盒子背景半透明， 子里面的内容不受影响●因为是CSS3，所以低于ie9的版本是不支持的。 2.8.9 背景总结 2.9 css三大特性2.9.1 层叠性样式冲突，后浪推前浪，遵循就近原则 2.9.2继承性字标签会继承父标签的部分样式，比如文本颜色和字号 想要设置一个可继承的属性，只需要将它应用于父元素即可 ●注意:。恰当地使用继承可以简化代码，降低CSS样式的复杂性。比如有很多子级孩子都需要某个样式,可以给父级指定一个,这些孩子继承过来就好了。。==元素可以继承父元素的样式(text-， font-, line-这些元素开头的可以继承，以及color属性)== ==2.9.3优先级==权重计算公式 权重叠加==继承的权重为0== 这个不难，但是忽略很容易绕晕。实,我们修改样式，一定要看该标签有没有被选中。1)如果选中了，那么以上面的公式来计权重。谁大听谁的。2)如果没有选中， 那么权重是0，因为继承的权重为0. 2.10盒子模型盒子模型有元素的内容、边框(border) 、内边距(padding)、和外边距(margin)组成。盒子里面的文字和图片等元索是内容区域盒子的厚度我们成为盒子的边框盒子内容与边框的距离是内边距(类似单元格的cellpadding)盒子与盒之间的距离是外边距(类似单元格的cellspacing) 2.10.1 盒子边框1.语法 ●边框的样式:none: 没有边框即忽略所有边框的宽度(默认值)solid: 边框为单实线(最为常用的)dashed: 边框为虚线dotted: 边框为点线 2 边框的综合写法==边框的综合写法==：边框粗细 边框样式 边框颜色 3 表格的细线边框通过表格的cellspacing= &quot;0&quot;，将单元格与单元格之间的距离设置为0,但是两个单元格之间的边框会出现重叠，从而使边框变粗 解决办法： collapse：合并border-collapse:collapse; 表示相邻边框合并在一起。 2.10.2 内边距 padding 简写： ==开发中注意事项：== ==padding一定是有的，会增加父盒子的宽度，通过改变内容宽度解决。== padding不影响盒子情况：如果盒子没有宽度，则padding不会撑开盒子 2.10.3外边距 margin1.margin ：盒子与盒子之间 的距离 ==2.块级盒子水平居中==●可以让一 个块级盒子实现水平居中必须:。盒子必须指定了宽度(width)。然后就给左右的外边距都设置为auto 3插入图片和背景图片1.插入图片我们用的最多比如产品展示类移动位置只能靠盒模型padding margin2.背景图片我们一般用于小图标背景或者超大背景图片背景图片只能通过background-position 5.外边距合并（1）相邻块元素垂直外边距的合并●当上下相邻的两个块元素相遇时，如果上面的元素有下外边距margin-bottom●下面的元素有上外边距margin-top,则他们之间的垂直间距不是margin-bottom与margin-top之和●取两个值中的较大者这种现象被称为相邻块元素垂直外边距的合并(也称外边距塌陷)。 解决方案：尽量只给一个盒子添加margin （2）嵌套块元素垂直外边距的合并 解决方案:1.可以为父元素定义上边框。2.可以为父元素定义上内边距3.可以为父元素添加overflow:hidden。 2.10.4盒子模型布局稳定性==按照优先使用宽度(width)其次使用内边距(padding)再次外边距(margin)。== 2.11浮动 float布局的三种机制： CSS提供了3种机制来设置盒子的摆放位置，分别是普通流 (标准流)、浮动和定位，其中:1.普通流(标准流)块级元素会独占一行，从向下顺序排列;■常用元素: div、hr、 p、h1~h6、 ul、 ol、 dI、 form、 table 行内元素会按照顺序,从左到右顺序排列，碰到父元素边缘则自动换行;■常用元素: span、a、i、 em等2.浮动让盒子从普通流中浮起来，主要作用让多个块级盒子一行显示。3.定位将盒子定在浏览器的某一 个位置– -CSS离不开定位，特别是后面的js特效。 网页布局的核心：用css摆放盒子 1.float语法 浮动口诀：浮 浮动口诀：漏 浮动一-漏~漏~漏~浮动的盒子，把自己原来的位置漏给下面标准流的盒子，就是不占有原来位置，是脱离标准流的，我们俗称“脱标”。 浮动口诀：特 浮动 特性float属性会改变元素display属性。任何元素都可以浮动。浮动元素会生成一个块级框，而不论它本身是何种元索。生成的块级框和我们前面的行内块极其相似。 2.浮动元素与父盒子的关系子盒子的浮动参照父盒子对齐不会与父盒子的边框重委，也不会超过父盒子的内边距 3.浮动元素与兄弟盒子的关系在一个父级盒子中，如果前一个兄弟盒子是:●浮动的，那么当前盒子会与前一个盒子的顶部对齐;●普通流的,那么当前盒子会显示在前一个兄弟盒子的下方。 ==浮动只会影响当前的或者 是后面的盒子,不会影响前面的标准流== 4.清除浮动 解决办法： ==清除浮动主要为了解决父级元素因为子级浮动引起内部高度为0的问题。清除浮动之后，父级就会根据浮动的子盒子自动检测高度。父级有了高度,就不会影响下面的标准流了== 开发中常用clear:both 1.额外标签法（隔墙法） 2.父级添加overflow属性 3.使用after伪元素==:after 方式为空元素额外标签法的升级版，好处是不用单独加标签了== 1234567891011.clearfix:after &#123; content: ""; display: block; height: 0; clear: both; visibility: hidden;&#125;.clearfix &#123; *zoom: 1;&#125;父级盒子调用样式clearfix 4.使用双伪元素12345678910111213.clearfix:before,.clearfix:after &#123; content: &quot;&quot;; display: table; &#125;.clearfix: after &#123; clear: both; &#125;.clearfix &#123; *zoom: 1&#125; .clearfix:before,.clearfix:after { content: “”; display: table;}.clearfix:after { clear: both;} 5清除浮动总结 2.12 Photoshop 切图常见的图片格式： jpg图像格式:JPEG (.JPG) 对色彩的信息保留较好，高清，颜色较多，我们产品类的图片经常用jpg格式的 gif图像格式:GIF格式最多只能储存256色，所以通常用来显示简单图形及字体，但是可以保存透明背景和动画效果 png图像格式是一种新兴的网络图形格式，结合了GIF和JPEG的优点，具有存储形式丰富的特点，能够保持透明背景 PSD图像格式PSD格式是Photoshop的专用格式，里面可以存放图层、通道、遮罩等多种设计草稿。 切片方法 2.13 定位positionCSS提供了3种机制来设置盒子的摆放位置，分别是普通流、 浮动和定位,其中:1.普通流(标准流]2.浮动。让盒子从普通流中浮起来– 让多个舒(div)水平排列成-行。3.定位。将盒子定在某一个位置自由的漂浮在其他盒子的上面-一 CSS离不开定位,特别是后面的js特效。 ==标准流在最底层(海底) 浮动的盒子在中间层(海面) -定位的盒子在最上层(天空)== 1.定位概念定位=定位模式+边偏移 2.定位模式 2.1 静态定位 static静态定位是元素的默认定位方式，无定位的意思。它相当于border里面的none，不要定位的时候用。静态定位按照标准流特性摆放位置，它没有边偏移。静态定位在布局时我们几乎不用的 2.2 相对定位 relative相对定位是元素相对于它 原来在标准流中的位置来说的 ==相对定位的特点: (务必记住)====●相对于自己原来在标准流中位置来移动的====●原来在标准流的区域继续占有，后面的盒子仍然以标准流的方式对待它。== 2.3 绝对定位 absolute绝对定位是元素以带有定位的父级元素来移动位置(拼爹型)1.完全脱标– 完全不占位置;==2.若父元素没有定位，则以浏览器为准定位(Document 文档)== 口诀：==子绝父相== 2.4 固定定位 fixed定定位是绝对定位的一种特殊形式: (认死理型) 如果说绝对定位是一 个矩形那么固定走位就类似于正方形1.完全脱标- – 完全不占位置;2.只认浏览器的可视窗口—-浏览器可视窗口 +边偏移属性来设置元素的位置; 。跟父元素没有任何关系; 。==不随滚动条滚动==。 3 定位 扩展3.1 绝对定位的盒子居中==绝对定位/固定定位的盒子。不能通过设置margin：0 auto；来设置水平居中的== 解决办法： 3.2 堆叠顺序（z-index）在使用定位布局时，可能会出现盒子重叠的情况。 加了定位的盒子，默认后来者居上， 后面的盒子会压住前面的盒子。 应用 z-index 层叠等级属性可以调整盒子的堆叠顺序。如下图所示： z-index 的特性如下： 属性值：正整数、负整数或 0，默认值是 0，数值越大，盒子越靠上； 如果属性值相同，则按照书写顺序，后来居上； 数字后面不能加单位。 注意：z-index 只能应用于相对定位、绝对定位和固定定位的元素，其他标准流、浮动和静态定位无效。 3.3 定位改变display属性display 是 显示模式， 可以改变显示模式有以下方式: 可以用inline-block 转换为行内块 可以用浮动 float 默认转换为行内块（类似，并不完全一样，因为浮动是脱标的） 绝对定位和固定定位也和浮动类似， 默认转换的特性 转换为行内块。 一个行内的盒子，如果加了浮动、固定定位和绝对定位，不用转换，就可以给这个盒子直接设置宽度和高度等。 浮动元素、绝对定位(固定定位）元素的都不会触发外边距合并的问题。 （我们以前是用padding border overflow解决的），给==盒子改为了浮动或者定位，就不会有垂直外边距合并的问题==了。 4.定位总结 定位模式 是否脱标占有位置 移动位置基准 模式转换（行内块） 使用情况 静态static 不脱标，正常模式 正常模式 不能 几乎不用 ==相对定位relative== 不脱标，占有位置 相对自身位置移动 不能 基本单独使用 ==绝对定位absolute== 完全脱标，不占有位置 相对于定位父级移动位置 能 要和定位父级元素搭配使用 ==固定定位fixed== 完全脱标，不占有位置 相对于浏览器移动位置 能 单独使用，不需要父级 注意： 边偏移需要和定位模式联合使用，单独使用无效； top 和 bottom 不要同时使用； left 和 right 不要同时使用。 三. CSS高级技巧 2020.2.22-2020.3.11.元素的显示与隐藏 目的 让一个元素在页面中消失或者显示出来 场景 类似网站广告，当我们点击关闭就不见了，但是我们重新刷新页面，会重新出现！ 1.1 display 显示（重点） display 设置或检索对象是否及如何显示。 123display: none 隐藏对象display：block 除了转换为块级元素之外，同时还有显示元素的意思。 特点： 隐藏之后，不再保留位置。 实际开发场景： 配合后面js做特效，比如下拉菜单，原先没有，鼠标经过，显示下拉菜单， 应用极为广泛 1.2 visibility 可见性（了解） 设置或检索是否显示对象。 123visibility：visible ; 对象可视visibility：hidden; 对象隐藏 特点： 隐藏之后，继续保留原有位置。（停职留薪） 1.3 overflow 溢出(重点) 检索或设置当对象的内容超过其指定高度及宽度时如何管理内容。 属性值 描述 visible 不剪切内容也不添加滚动条 hidden 不显示超过对象尺寸的内容，超出的部分隐藏掉 scroll 不管超出内容否，总是显示滚动条 auto 超出自动显示滚动条，不超出不显示滚动条 实际开发场景： 清除浮动 隐藏超出内容，隐藏掉, 不允许内容超过父盒子。 1.4 显示与隐藏总结 属性 区别 用途 display 隐藏对象，不保留位置 配合后面js做特效，比如下拉菜单，原先没有，鼠标经过，显示下拉菜单， 应用极为广泛 visibility 隐藏对象，保留位置 使用较少 overflow 只是隐藏超出大小的部分 1. 可以清除浮动 2. 保证盒子里面的内容不会超出该盒子范围 2. CSS用户界面样式 所谓的界面样式， 就是更改一些用户操作样式，以便提高更好的用户体验。 更改用户的鼠标样式 (滚动条因为兼容性非常差，我们不研究) 表单轮廓等。 防止表单域拖拽 2.1 鼠标样式cursor 设置或检索在对象上移动的鼠标指针采用何种系统预定义的光标形状。 属性值 描述 default 小白 默认 pointer 小手 move 移动 text 文本 not-allowed 禁止 2.2 轮廓线 outline 是绘制于元素周围的一条线，位于边框边缘的外围，可起到突出元素的作用。 1outline : outline-color ||outline-style || outline-width 但是我们都不关心可以设置多少，我们平时都是去掉的。 li 最直接的写法是 ： outline: 0; 或者 outline: none; 1&lt;input type="text" style="outline: 0;"/&gt; 2.3 防止拖拽文本域resize实际开发中，我们文本域右下角是不可以拖拽： 1&lt;textarea style="resize: none;"&gt;&lt;/textarea&gt; 2.4 用户界面样式总结 属性 用途 用途 鼠标样式 更改鼠标样式cursor 样式很多，重点记住 pointer 轮廓线 表单默认outline outline 轮廓线，我们一般直接去掉，border是边框，我们会经常用 防止拖拽 主要针对文本域resize 防止用户随意拖拽文本域，造成页面布局混乱，我们resize:none 3. vertical-align 垂直对齐 有宽度的块级元素居中对齐，是margin: 0 auto; 让文字居中对齐，是 text-align: center; 但是我们从来没有讲过有垂直居中的属性。 vertical-align 垂直对齐，它只针对于==行内元素或者行内块元素==， 1vertical-align : baseline |top |middle |bottom 设置或检索对象内容的垂直对其方式。 注意： vertical-align 不影响块级元素中的内容对齐，它只针对于行内元素或者行内块元素， 特别是行内块元素， 通常用来控制图片/表单与文字的对齐。 3.1 图片表单和文字对齐 3.2 去除图片底侧空白缝隙 原因： 图片或者表单等行内块元素，他的底线会和父级盒子的基线对齐。 就是图片底侧会有一个空白缝隙。 解决的方法就是： 给img vertical-align:middle | top| bottom等等。 让图片不要和基线对齐。 给img 添加 display：block; 转换为块级元素就不会存在问题了。 4.溢出的文字省略号显示4.1 white-space white-space设置或检索对象内文本显示方式。通常我们使用于强制一行显示内容 123white-space:normal ；默认处理方式white-space:nowrap ； 强制在同一行内显示所有文本，直到文本结束或者遭遇br标签对象才换行。 4.2 text-overflow 文字溢出 设置或检索是否使用一个省略标记（…）标示对象内文本的溢出 123text-overflow : clip ；不显示省略标记（...），而是简单的裁切 text-overflow：ellipsis ； 当对象内文本溢出时显示省略标记（...） 注意： 一定要首先强制一行内显示，再次和overflow属性 搭配使用 4.3 总结-三部曲 5. css精灵技术5.1为什么需要精灵技术 图所示为网页的请求原理图，当用户访问一个网站时，需要向服务器发送请求，网页上的每张图像都要经过一次请求才能展现给用户。 然而，一个网页中往往会应用很多小的背景图像作为修饰，当网页中的图像过多时，服务器就会频繁地接受和发送请求，这将大大降低页面的加载速度。 为什么需要精灵技术： 为了有效地减少服务器接受和发送请求的次数，提高页面的加载速度。 出现了CSS精灵技术（也称CSS Sprites、CSS雪碧）。 5.2 精灵技术详解CSS 精灵其实是将网页中的一些背景图像整合到一张大图中（精灵图），然而，各个网页元素通常只需要精灵图中不同位置的某个小图，要想精确定位到精灵图中的某个小图。 这样，当用户访问该页面时，只需向服务发送一次请求，网页中的背景图像即可全部展示出来。 我们需要使用CSS的 background-image、 background-repeat background-position属性进行背景定位， 其中最关键的是使用background-position 属性精确地定位。 5.3 精灵技术使用的核心总结首先我们知道，css精灵技术主要针对于背景图片，插入的图片img 是不需要这个技术的。 精确测量，每个小背景图片的大小和 位置。 给盒子指定小背景图片时， 背景定位基本都是 负值。 5.4 制作精灵图CSS 精灵其实是将网页中的一些背景图像整合到一张大图中（精灵图），那我们要做的，就是把小图拼合成一张大图。 大部分情况下，精灵图都是网页美工做。 123我们精灵图上放的都是小的装饰性质的背景图片。 插入图片不能往上放。我们可以横向摆放也可以纵向摆放，但是每个图片之间留有适当的空隙在我们精灵图的最低端，留一片空隙，方便我们以后添加其他精灵图。 结束语： 小公司，背景图片很少的情况，没有必要使用精灵技术，维护成本太高。 如果是背景图片比较多，可以建议使用精灵技术。 6.导航栏-滑动门为了使各种特殊形状的背景能够自适应元素中文本内容的多少，出现了CSS滑动门技术。它从新的角度构建页面，使各种特殊形状的背景能够自由拉伸滑动，以适应元素内部的文本内容，可用性更强。 最常见于各种导航栏的滑动门。 http://weixin.qq.com/ 6.1 核心技术核心技术就是利用CSS精灵（主要是背景位置）和 盒子padding撑开宽度, 以便能适应不同字数的导航栏。 一般的经典布局都是这样的： 12345&lt;li&gt; &lt;a href="#"&gt; &lt;span&gt;导航栏内容&lt;/span&gt; &lt;/a&gt;&lt;/li&gt; css样式 12345678910111213141516171819202122232425262728293031* &#123; padding:0; margin:0; &#125; body&#123; background: url(images/wx.jpg) repeat-x; &#125; .father &#123; padding-top:20px; &#125; li &#123; padding-left: 16px; height: 33px; float: left; line-height: 33px; margin:0 10px; background: url(./images/to.png) no-repeat left ; &#125; a &#123; padding-right: 16px; height: 33px; display: inline-block; color:#fff; background: url(./images/to.png) no-repeat right ; text-decoration: none; &#125; li:hover, li:hover a &#123; background-image:url(./images/ao.png); &#125; 总结： a 设置 背景左侧，padding撑开合适宽度。 span 设置背景右侧， padding撑开合适宽度 剩下由文字继续撑开宽度。 之所以a包含span就是因为 整个导航都是可以点击的。 四. H5+CSS3 2020.3.31-2020.4.51. 属性选择器 ==类选择器、属性选择器、伪类选择器，权重为10== 2. css3结构伪类选择器 3. 伪元素选择器 4. css3 2D转换4.1 移动translate 4.2 旋转 rotate语法： 1transform:rotate(度数) 重点： ●rotate里面跟度数，单位是deg比如rotate(45deg)●角度为正时,顺时针,负时,为逆时针●默认旋转的中心点是元素的中心点 4.3 缩放 scale1transform：scale(x，y) 4.4 综合写法 5. 动画 animation5.1 动画的基本使用 定义动画 123456789@keyframs 动画名称 &#123; 0%&#123; width:100px； &#125; 100% &#123; width:200px； &#125;&#125; 调用动画 12animation-name:动画名称；animation-duration：持续时间； 5.2 动画常用属性 5.3 动画简写animation：动画名称 持续时间 运动曲线 何时开始 播放次数 是否反方向 动画起始或者结束的状态 5.4 速度曲线调节animation-timing-function:规定动画的速度曲线，默认是‘’ease’’ 6. 3D 转换6.1 3D 移动 translate3d 6.2 透视 perspective 规律：==近大远小== 6.3 3D旋转 rotate3d 6.4 3D呈现transform-style●控制子元素是否开启三维立体环境。。●transform-style: flat子元素不开启3d立体空间默认的●transform-style: preserve- 3d;元素开启立体空间●代码写给父级,但是影响的是子盒子 五. JS基础 2020.3.16-2020.3.311. 变量声明变量的特殊情况 2. 数组 Array六 . WebAPI编程1.定义1. API定义 ：API ( Application Programming Interface,应用程序编程接口)是一些预先定义的函数,目的是提供应用程序与开发人员基于某软件或硬件得以访问一组例程的能力,而双无需访问源码,或理解内部工作机制的细节。 2. web APIWeb API是浏览器提供的一套操作浏览器功能和页面元素的API( BOM和DOM)。 3. 区别 2. DOM2.1 DOM定义文档对象模型( Document ObjectModel ,简称DOM) , 是W3C组织推荐的处理可扩展标记语言( HTML或者XML )的标准编程接口。 2.2 DOM 树 2.3 获取元素DOM在我们实际开发中主要用来操作元素。==获取页面中的元素可以使用以下几种方式:==●根据ID获取●根据标签名获取●通过HTML5新增的方法获取●特殊元素获取 1. 根据id获取 getElementByld（）使用getElementByld（）方法可以获取带有ID的元素对象。 因为我们文档页面从上往下加载，所以先得有标签所以我们script写到标签的下面 get获得element 元素by通过驼峰命名法 参数id是大小写敏感的字符串 返回的是一个元素对象 1console.dir() 打印返回的元素对象更好的查看里面的属性和方法 2.根据标签名获取 getElementsByTagName()使用getElementsByTagName()方法可以返回带有指定标签名的对象的集合。 返回的是获取过来的元素对象的集合，以伪数组的形式存储 ==element.getElementsByTagName() 可以得到元素里面的某些标签== 3. 通过HTML5新增的方法获取 4.特殊元素获取 (body,html) 2.4 事件基础1. 事件概述JavaScript使我们有能力创建动态页面,而事件是可以被JavaScript侦测到的行为。简单理解:==触发—响应机制==。网页中的每个元素都可以产生谋些可以触发JavaScript的事件,例如,我们可以在用户点击某按钮时产生一个事件,然后去执行某些操作。 事件组成： 事件源 事件被触发的对象 （谁） 事件类型 如何触发 什么事件 事件处理程序 通过一个函数赋值的方式完成 2.执行事件的步骤 获取事件源 绑定事件 添加事件处理程序（采取函数赋值形式） 3. 常见的鼠标事件 2.5 操作元素JavaScript的DOM操作可以改变网页内容、结构和样式,我们可以利用DOM操作元素来改变元素里面的内容、属性等。注意以下都是属性 1. 改变元素内容 区别： innerText 不识别HTML标签，去除空格和换行 ==innerHTML 识别HTML标签（推荐）==，保留空格和换行 可读写，可以获取元素的里面的内容 2. 常用属性操作 3. 表单元素的属性操作 4. 样式属性操作可以通过JS 修改元素的大小、颜色、位置等样式 12element.style 行内样式操作element.className 类名样式操作 js 里面的样式采取驼峰命名法比如 fontSize、backgroundColor js 修改style样式操作，产生的是行内样式，css权重比较高 移动端开发一. Flex 伸缩布局 2020.4.8-4.101.视口 viewport视口就是浏览器显示当前页面内容的屏幕区域。视口可以分为布局视口、视觉视口、==理想视口== 1.1 布局视口 layout viewport●一般移动设备的浏览器都默认设置了一个布局视口 ,用于解决早期的PC端页面在手机上显示的问题。●iOS, Android基本都将这个视口分辨率设置为980px ,所以PC上的网页大多都能在手机上呈现,只不过元素看上去很小,一般默认可以通过手动缩放网页。 1.2 视觉视口 visual viewport 用户正在看到的网站的区域 ，注意：==网站区域== 可以通过缩放去操作视觉视口，但不会影响布局视口，布局视口保持原来的宽度 1.3 理想视口 ideal viewport 为了网站在移动端最理想的浏览和宽度而设定 理想视口，对设备来说，是最理想的视口尺寸 需要手动添写meta视口标签通知浏览器操作 meta视口标签的主要目的：布局视口的宽度应和理想视口的宽度一致，简单来说就是设备有多宽，我的布局视口有多宽 2. meta 视口标签12&lt;meta name="viewport" content="width=device-width, initial-scale=1.0,maximum-scale=1.0, minimum-sacle=1.0,user-scalable=no"&gt; 3. 二倍图3.1 多倍图 3.2 背景缩放 background-sizebackground-size 属性规定背景图像的尺寸 1background-size:背景图片宽度 背景图片高度； 4. 单独移动端页面（主流）通常情况下，网站域名前面加m(mobile)可以打开移动端。通过判断设备，如果是移动端设备打开，则跳转移动端页面 5. 响应式兼容PC移动端6.移动端 技术解决方案6.1 css 初始化 normalize.css 官网：http://necolas.github.io/normalize.css/ 6.2 CSS3 盒子模型box-sizing 6.3 特殊样式 7. 移动端常见布局7.1 移动端技术选型 7.1.1 流式布局（百分比布局） 流式布局，百分比布局，也称非固定像素布局 通过盒子的宽度设置成百分比来根据屏幕的宽度来进行伸缩，不受固定像素的限制，内容向两侧填充 流式布局方式是移动web开发使用的比较常见的布局方式 max-width 最大宽度 min-width 最小宽度 ==案例：京东手机端首页== 7.1.2 flex布局8.flex 布局1.特点 操作方便，布局极为简单，移动端应用广泛 PC端浏览器支持情况较差 IE11或更低版本，不支持或仅部分支持 2.原理flex 是flexible box,译为弹性布局，用来为盒装模型提供最大的灵活性，任何一个容器都可以指定为flex布局 当我们为父盒子指定为flex布局以后，子元素 的float、clear和vertical-align属性将失效 伸缩布局=弹性布局=伸缩盒布局=弹性盒布局=flex布局 ==总结：通过给父盒子添加flex属性，来控制盒子的位置和排列方式==（子容器/flex项目可以横向排列或者竖向排列） 3.常用父项属性flex- direction :设置主轴的方向justify-content :设置主轴上的子元素排列方式flex-wrap :设置子元素是否换行align-content :设置侧轴上的子元素的排列方式(多行)align- items :设置侧轴上的子元素排列方式(单行)flex-flow :复合属性,相当于同时设置了flex direction和flex-wrap 1. flex-direction 属性决定主轴的方向（即项目的排列方向）==注：主轴和侧轴是会变化的，就看flex-direction设置谁为主轴，剩下的是侧轴。子元素是跟主轴来排列的== 2 .justify-content :设置主轴上的子元素排列方式justify-content属性定义了项目在主轴上的对齐方式（注：使用这个属性前一定确定好主轴是哪个） 3.flex-wrap :设置子元素是否换行默认情况下，项目都排在一条线上。flew-wrap属性定义，felx布局中默认是不换行的 4. align- items :设置侧轴上的子元素排列方式(单行)控制子项在侧轴（默认是y轴）上的排列方式 在子项为单项的时候使用 5. align-content :设置侧轴上的子元素的排列方式(多行)设置子项在侧轴上的排列方式并且只能用于子项出现换行的情况（多行)，在单行下是没有效果滴 align-content和align-items 的区别 align-item适应于单行情况下，只有上对齐、下对齐和居中拉伸 align-content适应于多行（换行）情况下，可以设置上对齐、下对齐、居中、拉伸以及平均分配剩余空间等属性值 6.flex-flow :复合属性 4.常用子项属性4.1 flex 属性 4.2 align-self 控制子项在侧轴上的排列方式align-self属性允许单个项目有其他项目不样的对齐方式,可覆盖align-items属性。默认值为auto ,示继承父元素的align-items属性,如果没有元素,则等同于stretch。 4.3 order 属性定义项目的排列顺序数值越小，排列越靠前，默认是0. 注：和z-index不一样 二. rem 适配布局1. rem 基础 ==优势：通过修改HTML里面的文字大小来改变页面中元素的大小可以整体控制== 2. 媒体查询2.1媒体查询定义媒体查询( Media Query )是CSS3新语法。 2.2 语法规范 1. mediatype 媒体类型 2. 关键字 3. 媒体特性 4. 引入资源当样式比较繁多的时候,我们可以针对不同的媒体使用不同stylesheets (样式表)。 原理,就是直接在link中判断设备的尺寸,然后引用不同的css文件。 3. less3.1 维护css的弊端 3.2 less 基础1. 介绍 2. less 变量 3. less 编译本质上, Less包含-自定义的语法及-个解析器,用户根据这些语法定义自己的样式规则,这些规则最终会通过解析器,编译生成对应的CSS文件。所以,我们需要把我们的less文件,编译生成为css文件,这样我们的html页面才能使用。 4. less 嵌套less嵌套 ： 子元素样式直接写在父元素里面 5. ==less 运算==任何数字、颜色或者变量都可以参与运算。less提供了加减乘除算数运算 4. rem 适配方案1.让一些不能等比自适应的元素,达到当设备尺寸发生改变的时候,等比例适配当前设备。2.使用媒体查询根据不同设备按比例设置html的字体大小，然后页面元素使用rem做尺寸单位,当html字体大小变化，元素尺寸也会发生变化,从而达到等比缩放的适配。 1. rem 实际开发适配方案 2. rem 适配方案技术使用 三.响应式布局Bootstrap 2020.1.28-2.51.列嵌套​ 2.列偏移右侧偏移,col-lg-offest-#，#偏移的份数3.列排序通过使用.col-lg-push-#和.col-lg-pull-#类就可以改变列的顺序，右侧往左拉pull，左侧push退4.响应式工具工具类针对不同的设备大小展示或隐藏页面内容​ 相反，visible-xs ,visible-sm，，，显示页面内容5.阿里百秀项目实战开发经验 950px*310px1.==清除元素的默认内外边距== 1234*&#123; padding：0； margin：0；&#125; 注意:●行内元素为了照顾兼容性，尽量只设置左右内外边距， 不要设置上下内外边距。 2.去掉列表默认样式 3.css书写规范3.1空格规范==选择器与{之间必须包含空格== ==属性名与之后的:之间不允许包含空格，: 与属性值之间必须包含空格。== 3.2 选择器规范并集选择器，每个选择器另起一行 一般情况情况下，选择器的嵌套层级应不大于3级，位置靠后的限定条件应尽可能精确。 4.导航栏 排列整体用li 导航栏字不一样多，不要设宽度，而是用padding挤开 量高度的时候不要量边框 5.css属性书写顺序 6.子盒子和父盒子（子盒子大于父盒子）子盒子是可以大于父盒子的 7. 网页布局总结一个完整的网页，有标准流 、 浮动 、 定位 一起完成布局的。每个都有自己的专门用法。 1). 标准流可以让盒子上下排列 或者 左右排列的 2). 浮动可以让多个块级元素一行显示 或者 左右对齐盒子 浮动的盒子就是按照顺序左右排列 3). 定位定位最大的特点是有层叠的概念，就是可以让多个盒子 前后 叠压来显示。 但是每个盒子需要测量数值。 8. 字体图标1. 字体图标优点12345可以做出跟图片一样可以做的事情,改变透明度、旋转度，等..但是本质其实是文字，可以很随意的改变颜色、产生阴影、透明效果等等...本身体积更小，但携带的信息并没有削减。几乎支持所有的浏览器移动端设备必备良药... 2. 字体图标使用流程总体来说，字体图标按照如下流程： 3. 设计字体图标假如图标是我们公司单独设计，那就需要第一步了，这个属于UI设计人员的工作， 他们在 illustrator 或 Sketch 这类矢量图形软件里创建 icon图标， 比如下图： 之后保存为svg格式，然后给我们前端人员就好了。 其实第一步，我们不需要关心，只需要给我们这些图标就可以了，如果图标是大众的，网上本来就有的，可以直接跳过第一步，进入第三步。 4. 上传生成字体包 当UI设计人员给我们svg文件的时候，我们需要转换成我们页面能使用的字体文件， 而且需要生成的是兼容性的适合各个浏览器的。 ​ 推荐网站： http://icomoon.io icomoon字库 IcoMoon成立于2011年，推出的第一个自定义图标字体生成器，它允许用户选择他们所需要的图标，使它们成一字型。 内容种类繁多，非常全面，唯一的遗憾是国外服务器，打开网速较慢。 阿里icon font字库 http://www.iconfont.cn/ 这个是阿里妈妈M2UX的一个icon font字体图标字库，包含了淘宝图标库和阿里妈妈图标库。可以使用AI制作图标上传生成。 一个字，免费，免费！！ 5. 下载兼容字体包刚才上传完毕， 网站会给我们把UI做的svg图片转换为我们的字体格式， 然后下载下来就好了 当然，我们不需要自己专门的图标，是想网上找几个图标使用，以上2步可以直接省略了， 直接到刚才的网站上找喜欢的下载使用吧。 6. 字体引入到HTML 1.首先把 fonts文件夹放入我们 根目录下 。 html标签内里面添加结构 1&lt;span&gt;&lt;/span&gt; 3. 3. 在样式里面声明字体： 告诉别人我们自己定义的字体(一定注意字体文件路径的问题)12345678910@font-face &#123; font-family: 'icomoon'; src: url('fonts/icomoon.eot?7kkyc2'); src: url('fonts/icomoon.eot?7kkyc2#iefix') format('embedded-opentype'), url('fonts/icomoon.ttf?7kkyc2') format('truetype'), url('fonts/icomoon.woff?7kkyc2') format('woff'), url('fonts/icomoon.svg?7kkyc2#icomoon') format('svg'); font-weight: normal; font-style: normal;&#125; 4. 给盒子使用字体123span &#123; font-family: "icomoon"; &#125; 7. 追加字体图标如果工作中，原来的字体图标不够用了，我们需要添加新的字体图标，但是原来的不能删除，继续使用，此时我们需要这样做 把压缩包里面的selection.json 从新上传，然后，选中自己想要新的图标，从新下载压缩包，替换原来文件即可。 开发项目实战1.学成在线案例1.1 准备素材1.2 项目准备工作欲先善其事,必先利其器。先把我们的前期准备 工作做好，我们本次采取结构与样式相分 离思想。 1.创建根目录文件夹(用于存放我们这个页面的相关内容) 根目录内新建images文件夹用于保存图片。 根目录内新建index.html首页html文件(以后我们的网站首页统-规定为index.html) 根目录内新建style.css样式文件。我们本次采用外链样式表。 将样式引入到我们HTML页面文件中。 样式表写入清除内外边距样式，来检测样式表是否引入成功。 1.3布局流程为了提高网页制作的效率，布局时通常有以下的布局流程，具体如下:1、必须确定页面的版心(可视区)，我们测量可得知。2、分析页面中的==行模块==，以及每个行模块中的列模块。实页面布局，就是一行行罗列而成3、制作HTML结构。 我们还是遵循，先有结构，后有样式的原则。结构永远最重要。4、然后开始运用盒子模型的原理，通过DIV+CSS布 局来控制网页的各个模块。 2.品优购 案例 2020.3.2-3.153. 携程网首页 2020.4.8-4.201. 背景线性渐变语法1 背景渐变必须添加浏览器私有前缀，起始方向可以是:方位名词或者度数如果省略默认就是top]]></content>
      <categories>
        <category>IT</category>
      </categories>
      <tags>
        <tag>-前端</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[blog制作步骤]]></title>
    <url>%2F2019%2F02%2F07%2Fblog%E5%88%B6%E4%BD%9C%E6%AD%A5%E9%AA%A4%2F</url>
    <content type="text"><![CDATA[hexo+github 搭建个人博客一.环境搭建1.安装node.js2.安装git3.1使用npm安装hexo 1npm install -g hexo-cli 3.2新建文件夹blog，右键打开git bash ,输入以下命令12hexo init blognpm install blog站点目录已创建完成 注:hexo相关命令均在站点目录下，用Git Bash运行。 站点配置文件：站点目录下的_config.yml。 路径为&lt;blog&gt;\_config.yml 主题配置文件：站点目录下的themes文件夹下的，主题文件夹下的_config.yml。 路径为&lt;blog&gt;\themes\&lt;主题文件夹&gt;\_config.yml 4.启动服务，在本地预览blog12hexo ghexo s 打开浏览器，localhost:4000，预览 二.主题优化1.在站点根目录下(blog)下输入1git clone https://github.com/iissnan/hexo-theme-next themes/next ##这是加载next主题 2.加载完成后，在站点目录下找到站点配置文件_config.yml,打开修改theme下的主题名称，landscape改为next注意有一个空格(next是站点目录下themes下的一个文件夹名称) 3.站点目录下输入123hexo clean ##清除缓存，网页显示异常，用用这条试试hexo g ##生成网站静态文件到默认设置的 public 文件夹hexo s ##启动本地服务器，用于预览主题。默认地址： http://localhost:4000/ 4.浏览器输入http://localhost:4000/，查看next主题效果next主题有几种设计，在theme\next\_config.yml中找到scheme Muse - 默认 Scheme，这是 NexT 最初的版本，黑白主调，大量留白 Mist - Muse 的紧凑版本，整洁有序的单栏外观 Pisces - 双栏 Scheme，小家碧玉似的清新 5.设置语言站点配置文件：站点目录下的_config.yml。设为language: zh-CN ###6.设置菜单选项 theme\next_config.yml中找到menu-seting ，去掉前边的#，即可显示 7.点击实现桃心7.1 在/themes/next/source/js/src下新建文件click.js，接着把以下粘贴到click.js文件中。代码如下： 1!function(e,t,a)&#123;function n()&#123;c(&quot;.heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: &apos;&apos;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;&quot;),o(),r()&#125;function r()&#123;for(var e=0;e&lt;d.length;e++)d[e].alpha&lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=&quot;left:&quot;+d[e].x+&quot;px;top:&quot;+d[e].y+&quot;px;opacity:&quot;+d[e].alpha+&quot;;transform:scale(&quot;+d[e].scale+&quot;,&quot;+d[e].scale+&quot;) rotate(45deg);background:&quot;+d[e].color+&quot;;z-index:99999&quot;);requestAnimationFrame(r)&#125;function o()&#123;var t=&quot;function&quot;==typeof e.onclick&amp;&amp;e.onclick;e.onclick=function(e)&#123;t&amp;&amp;t(),i(e)&#125;&#125;function i(e)&#123;var a=t.createElement(&quot;div&quot;);a.className=&quot;heart&quot;,d.push(&#123;el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()&#125;),t.body.appendChild(a)&#125;function c(e)&#123;var a=t.createElement(&quot;style&quot;);a.type=&quot;text/css&quot;;try&#123;a.appendChild(t.createTextNode(e))&#125;catch(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(&quot;head&quot;)[0].appendChild(a)&#125;function s()&#123;return&quot;rgb(&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;)&quot;&#125;var d=[];e.requestAnimationFrame=function()&#123;return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e)&#123;setTimeout(e,1e3/60)&#125;&#125;(),n()&#125;(window,document); 7.2 在\themes*\layout_layout.swig文件末尾添加：12&lt;!-- 页面点击小红心 --&gt;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/src/clicklove.js&quot;&gt;&lt;/script&gt; 参考:hexo 常用命令:https://blog.csdn.net/dxxzst/article/details/76135935]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>-博客 -经验</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F02%2F07%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
